{
  "address": "0x7B99c68012F78f9D15BA9EA4121aB3e09914Be70",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[][]",
          "name": "_paths",
          "type": "address[][]"
        },
        {
          "internalType": "address",
          "name": "_swapToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_toToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "calculateNeededTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dexRouterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "eligibleSwapPaths",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_toToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf1fb84583ab525e65d93b82f5a19011282acb89be74860c103024602a9156be0",
  "receipt": {
    "to": null,
    "from": "0x101b4C436df747B24D17ce43146Da52fa6006C36",
    "contractAddress": "0x7B99c68012F78f9D15BA9EA4121aB3e09914Be70",
    "transactionIndex": 9,
    "gasUsed": "1275625",
    "logsBloom": "0x
    "blockHash": "0xac8f025d62983ee0ef87cadea665c17b079cb55f8a8af13b6a8a7d527a0f6368",
    "transactionHash": "0xf1fb84583ab525e65d93b82f5a19011282acb89be74860c103024602a9156be0",
    "logs": [],
    "blockNumber": 20629578,
    "cumulativeGasUsed": "2295146",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      [
        "0x918146359264c492bd6934071c6bd31c854edbc3"
      ],
      [
        "0x765DE816845861e75A25fCA122bb6898B8B1282a",
        "0x918146359264c492bd6934071c6bd31c854edbc3"
      ],
      [
        "0x471EcE3750Da237f93B8E339c536989b8978a438",
        "0x765DE816845861e75A25fCA122bb6898B8B1282a",
        "0x918146359264c492bd6934071c6bd31c854edbc3"
      ],
      [
        "0x122013fd7dF1C6F636a5bb8f03108E876548b455",
        "0x918146359264c492bd6934071c6bd31c854edbc3"
      ],
      [
        "0xef4229c8c3250C675F21BCefa42f58EfbfF6002a",
        "0x765DE816845861e75A25fCA122bb6898B8B1282a",
        "0x918146359264c492bd6934071c6bd31c854edbc3"
      ]
    ],
    "0x765DE816845861e75A25fCA122bb6898B8B1282a"
  ],
  "numDeployments": 1,
  "solcInputHash": "f3c3190be9976f5ec62ad026781263c6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[][]\",\"name\":\"_paths\",\"type\":\"address[][]\"},{\"internalType\":\"address\",\"name\":\"_swapToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"calculateNeededTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dexRouterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eligibleSwapPaths\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/Swapper.sol\":\"Swapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\"},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\nimport './IUniswapV2Router01.sol';\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountETH);\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\"},\"contracts/test/Swapper.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\\\";\\n\\ncontract Swapper {\\n    using SafeERC20 for IERC20;\\n\\n    address public dexRouterAddress =\\n        // 0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506; // SushiSwap\\n        0x7D28570135A2B1930F331c507F65039D4937f66c; // Ubeswap\\n    // 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D; // Uniswap;\\n    mapping(address => address[]) public eligibleSwapPaths;\\n    address public swapToken;\\n\\n    constructor(address[][] memory _paths, address _swapToken) {\\n        swapToken = _swapToken;\\n        uint256 i = 0;\\n        uint256 eligibleSwapPathsLen = _paths.length;\\n        while (i < eligibleSwapPathsLen) {\\n            eligibleSwapPaths[_paths[i][0]] = _paths[i];\\n            i += 1;\\n        }\\n    }\\n\\n    function calculateNeededTokenAmount(\\n        address _toToken,\\n        uint256 _amount\\n    ) public view returns (uint256) {\\n        IUniswapV2Router02 dexRouter = IUniswapV2Router02(dexRouterAddress);\\n\\n        address[] memory path = generatePath(swapToken, _toToken);\\n        uint256 len = path.length;\\n\\n        uint256[] memory amounts = dexRouter.getAmountsIn(_amount, path);\\n        // sanity check arrays\\n        require(len == amounts.length, \\\"Arrays unequal\\\");\\n        require(_amount == amounts[len - 1], \\\"Output amount mismatch\\\");\\n        return amounts[0];\\n    }\\n\\n    function swap(address _toToken, uint256 _amount) public payable {\\n        IUniswapV2Router02 dexRouter = IUniswapV2Router02(dexRouterAddress);\\n\\n        address[] memory path = generatePath(swapToken, _toToken);\\n\\n        uint256[] memory amounts = dexRouter.swapETHForExactTokens{\\n            value: msg.value\\n        }(_amount, path, address(this), block.timestamp);\\n\\n        IERC20(_toToken).transfer(msg.sender, _amount);\\n\\n        if (msg.value > amounts[0]) {\\n            uint256 leftoverETH = msg.value - amounts[0];\\n            (bool success, ) = msg.sender.call{value: leftoverETH}(\\n                new bytes(0)\\n            );\\n\\n            require(success, \\\"Failed to send surplus ETH back to user.\\\");\\n        }\\n    }\\n\\n    function generatePath(\\n        address _fromToken,\\n        address _toToken\\n    ) internal view returns (address[] memory path) {\\n        uint256 len = eligibleSwapPaths[_fromToken].length;\\n        if (len == 1 || eligibleSwapPaths[_fromToken][1] == _toToken) {\\n            path = new address[](2);\\n            path[0] = _fromToken;\\n            path[1] = _toToken;\\n            return path;\\n        }\\n        if (len == 2 || eligibleSwapPaths[_fromToken][2] == _toToken) {\\n            path = new address[](3);\\n            path[0] = _fromToken;\\n            path[1] = eligibleSwapPaths[_fromToken][1];\\n            path[2] = _toToken;\\n            return path;\\n        }\\n        if (len == 3 || eligibleSwapPaths[_fromToken][3] == _toToken) {\\n            path = new address[](3);\\n            path[0] = _fromToken;\\n            path[1] = eligibleSwapPaths[_fromToken][1];\\n            path[2] = eligibleSwapPaths[_fromToken][2];\\n            path[3] = _toToken;\\n            return path;\\n        } else {\\n            path = new address[](4);\\n            path[0] = _fromToken;\\n            path[1] = eligibleSwapPaths[_fromToken][1];\\n            path[2] = eligibleSwapPaths[_fromToken][2];\\n            path[3] = eligibleSwapPaths[_fromToken][3];\\n            path[4] = _toToken;\\n            return path;\\n        }\\n    }\\n\\n    fallback() external payable {}\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x0d0b0d4eeacf2e4e5cb6142ddf5b2263afe4142f89e7b1e077647dc37ffc7153\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x6080604052600080546001600160a01b031916737d28570135a2b1930f331c507f65039d4937f66c1790553480156200003757600080fd5b50604051620012ac380380620012ac8339810160408190526200005a91620001f6565b600280546001600160a01b0319166001600160a01b03831617905581516000905b808210156200014e57838281518110620000a557634e487b7160e01b600052603260045260246000fd5b602002602001015160016000868581518110620000d257634e487b7160e01b600052603260045260246000fd5b6020026020010151600081518110620000fb57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002090805190602001906200013892919062000158565b506200014660018362000392565b91506200007b565b50505050620003cd565b828054828255906000526020600020908101928215620001b0579160200282015b82811115620001b057825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000179565b50620001be929150620001c2565b5090565b5b80821115620001be5760008155600101620001c3565b80516001600160a01b0381168114620001f157600080fd5b919050565b6000806040838503121562000209578182fd5b82516001600160401b038082111562000220578384fd5b818501915085601f83011262000234578384fd5b81516200024b62000245826200036c565b62000339565b80828252602082019150602085018960208560051b88010111156200026e578788fd5b875b8481101562000318578151868111156200028857898afd5b8701603f81018c136200029957898afd5b6020810151620002ad62000245826200036c565b80828252602082019150604084018f60408560051b8701011115620002d0578d8efd5b8d94505b83851015620002fe57620002e881620001d9565b83526001949094019360209283019201620002d4565b508752505060209485019492909201915060010162000270565b505080965050505050506200033060208401620001d9565b90509250929050565b604051601f8201601f191681016001600160401b0381118282101715620003645762000364620003b7565b604052919050565b60006001600160401b03821115620003885762000388620003b7565b5060051b60200190565b60008219821115620003b257634e487b7160e01b81526011600452602481fd5b500190565b634e487b7160e01b600052604160045260246000fd5b610ecf80620003dd6000396000f3fe60806040526004361061004b5760003560e01c80631357b1131461005457806357c9d13614610091578063d004f0f7146100bf578063dc73e49c146100d2578063e7f67fb1146100f257005b3661005257005b005b34801561006057600080fd5b5061007461006f366004610c71565b610112565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561009d57600080fd5b506100b16100ac366004610c71565b61014a565b604051908152602001610088565b6100526100cd366004610c71565b6102ec565b3480156100de57600080fd5b50600254610074906001600160a01b031681565b3480156100fe57600080fd5b50600054610074906001600160a01b031681565b6001602052816000526040600020818154811061012e57600080fd5b6000918252602090912001546001600160a01b03169150829050565b600080546002546001600160a01b0391821691839161016a911686610551565b80516040516307c0329d60e21b8152919250906000906001600160a01b03851690631f00ca74906101a19089908790600401610e0a565b60006040518083038186803b1580156101b957600080fd5b505afa1580156101cd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101f59190810190610ca7565b90508051821461023d5760405162461bcd60e51b815260206004820152600e60248201526d105c9c985e5cc81d5b995c5d585b60921b60448201526064015b60405180910390fd5b80610249600184610e60565b8151811061026757634e487b7160e01b600052603260045260246000fd5b602002602001015186146102b65760405162461bcd60e51b815260206004820152601660248201527509eeae8e0eae840c2dadeeadce840dad2e6dac2e8c6d60531b6044820152606401610234565b806000815181106102d757634e487b7160e01b600052603260045260246000fd5b60200260200101519450505050505b92915050565b600080546002546001600160a01b03918216929161030b911685610551565b90506000826001600160a01b031663fb3bdb4134868530426040518663ffffffff1660e01b81526004016103429493929190610e2b565b6000604051808303818588803b15801561035b57600080fd5b505af115801561036f573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526103989190810190610ca7565b60405163a9059cbb60e01b8152336004820152602481018690529091506001600160a01b0386169063a9059cbb90604401602060405180830381600087803b1580156103e357600080fd5b505af11580156103f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041b9190610d67565b508060008151811061043d57634e487b7160e01b600052603260045260246000fd5b602002602001015134111561054a5760008160008151811061046f57634e487b7160e01b600052603260045260246000fd5b6020026020010151346104829190610e60565b6040805160008082526020820192839052929350339184916104a391610dd1565b60006040518083038185875af1925050503d80600081146104e0576040519150601f19603f3d011682016040523d82523d6000602084013e6104e5565b606091505b50509050806105475760405162461bcd60e51b815260206004820152602860248201527f4661696c656420746f2073656e6420737572706c757320455448206261636b206044820152673a37903ab9b2b91760c11b6064820152608401610234565b50505b5050505050565b6001600160a01b0382166000908152600160208190526040909120546060918114806105de5750826001600160a01b031660016000866001600160a01b03166001600160a01b031681526020019081526020016000206001815481106105c757634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316145b1561068d576040805160028082526060820183529091602083019080368337019050509150838260008151811061062557634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050828260018151811061066757634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050506102e6565b80600214806106ec57506001600160a01b03848116600090815260016020526040902080549185169160029081106106d557634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316145b1561081a57604080516003808252608082019092529060208201606080368337019050509150838260008151811061073457634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505060016000856001600160a01b03166001600160a01b0316815260200190815260200160002060018154811061079957634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b0316826001815181106107d857634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050828260028151811061066757634e487b7160e01b600052603260045260246000fd5b806003148061087957506001600160a01b038481166000908152600160205260409020805491851691600390811061086257634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316145b15610a325760408051600380825260808201909252906020820160608036833701905050915083826000815181106108c157634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505060016000856001600160a01b03166001600160a01b0316815260200190815260200160002060018154811061092657634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b03168260018151811061096557634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092018101919091529085166000908152600190915260409020805460029081106109b157634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b0316826002815181106109f057634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050828260038151811061066757634e487b7160e01b600052603260045260246000fd5b60408051600480825260a0820190925290602082016080803683370190505091508382600081518110610a7557634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505060016000856001600160a01b03166001600160a01b03168152602001908152602001600020600181548110610ada57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b031682600181518110610b1957634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201810191909152908516600090815260019091526040902080546002908110610b6557634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b031682600281518110610ba457634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201810191909152908516600090815260019091526040902080546003908110610bf057634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b031682600381518110610c2f57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050828260048151811061066757634e487b7160e01b600052603260045260246000fd5b60008060408385031215610c83578182fd5b82356001600160a01b0381168114610c99578283fd5b946020939093013593505050565b60006020808385031215610cb9578182fd5b825167ffffffffffffffff80821115610cd0578384fd5b818501915085601f830112610ce3578384fd5b815181811115610cf557610cf5610e83565b8060051b604051601f19603f83011681018181108582111715610d1a57610d1a610e83565b604052828152858101935084860182860187018a1015610d38578788fd5b8795505b83861015610d5a578051855260019590950194938601938601610d3c565b5098975050505050505050565b600060208284031215610d78578081fd5b81518015158114610d87578182fd5b9392505050565b6000815180845260208085019450808401835b83811015610dc65781516001600160a01b031687529582019590820190600101610da1565b509495945050505050565b60008251815b81811015610df15760208186018101518583015201610dd7565b81811115610dff5782828501525b509190910192915050565b828152604060208201526000610e236040830184610d8e565b949350505050565b848152608060208201526000610e446080830186610d8e565b6001600160a01b03949094166040830152506060015292915050565b600082821015610e7e57634e487b7160e01b81526011600452602481fd5b500390565b634e487b7160e01b600052604160045260246000fdfea264697066735822122021e3d43cf8524ce8139eed6f7d48a47a7289fae4fd231efaa955faea50c172e364736f6c63430008040033",
  "deployedBytecode": "0x60806040526004361061004b5760003560e01c80631357b1131461005457806357c9d13614610091578063d004f0f7146100bf578063dc73e49c146100d2578063e7f67fb1146100f257005b3661005257005b005b34801561006057600080fd5b5061007461006f366004610c71565b610112565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561009d57600080fd5b506100b16100ac366004610c71565b61014a565b604051908152602001610088565b6100526100cd366004610c71565b6102ec565b3480156100de57600080fd5b50600254610074906001600160a01b031681565b3480156100fe57600080fd5b50600054610074906001600160a01b031681565b6001602052816000526040600020818154811061012e57600080fd5b6000918252602090912001546001600160a01b03169150829050565b600080546002546001600160a01b0391821691839161016a911686610551565b80516040516307c0329d60e21b8152919250906000906001600160a01b03851690631f00ca74906101a19089908790600401610e0a565b60006040518083038186803b1580156101b957600080fd5b505afa1580156101cd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101f59190810190610ca7565b90508051821461023d5760405162461bcd60e51b815260206004820152600e60248201526d105c9c985e5cc81d5b995c5d585b60921b60448201526064015b60405180910390fd5b80610249600184610e60565b8151811061026757634e487b7160e01b600052603260045260246000fd5b602002602001015186146102b65760405162461bcd60e51b815260206004820152601660248201527509eeae8e0eae840c2dadeeadce840dad2e6dac2e8c6d60531b6044820152606401610234565b806000815181106102d757634e487b7160e01b600052603260045260246000fd5b60200260200101519450505050505b92915050565b600080546002546001600160a01b03918216929161030b911685610551565b90506000826001600160a01b031663fb3bdb4134868530426040518663ffffffff1660e01b81526004016103429493929190610e2b565b6000604051808303818588803b15801561035b57600080fd5b505af115801561036f573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526103989190810190610ca7565b60405163a9059cbb60e01b8152336004820152602481018690529091506001600160a01b0386169063a9059cbb90604401602060405180830381600087803b1580156103e357600080fd5b505af11580156103f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041b9190610d67565b508060008151811061043d57634e487b7160e01b600052603260045260246000fd5b602002602001015134111561054a5760008160008151811061046f57634e487b7160e01b600052603260045260246000fd5b6020026020010151346104829190610e60565b6040805160008082526020820192839052929350339184916104a391610dd1565b60006040518083038185875af1925050503d80600081146104e0576040519150601f19603f3d011682016040523d82523d6000602084013e6104e5565b606091505b50509050806105475760405162461bcd60e51b815260206004820152602860248201527f4661696c656420746f2073656e6420737572706c757320455448206261636b206044820152673a37903ab9b2b91760c11b6064820152608401610234565b50505b5050505050565b6001600160a01b0382166000908152600160208190526040909120546060918114806105de5750826001600160a01b031660016000866001600160a01b03166001600160a01b031681526020019081526020016000206001815481106105c757634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316145b1561068d576040805160028082526060820183529091602083019080368337019050509150838260008151811061062557634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050828260018151811061066757634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050506102e6565b80600214806106ec57506001600160a01b03848116600090815260016020526040902080549185169160029081106106d557634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316145b1561081a57604080516003808252608082019092529060208201606080368337019050509150838260008151811061073457634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505060016000856001600160a01b03166001600160a01b0316815260200190815260200160002060018154811061079957634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b0316826001815181106107d857634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050828260028151811061066757634e487b7160e01b600052603260045260246000fd5b806003148061087957506001600160a01b038481166000908152600160205260409020805491851691600390811061086257634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316145b15610a325760408051600380825260808201909252906020820160608036833701905050915083826000815181106108c157634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505060016000856001600160a01b03166001600160a01b0316815260200190815260200160002060018154811061092657634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b03168260018151811061096557634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092018101919091529085166000908152600190915260409020805460029081106109b157634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b0316826002815181106109f057634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050828260038151811061066757634e487b7160e01b600052603260045260246000fd5b60408051600480825260a0820190925290602082016080803683370190505091508382600081518110610a7557634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505060016000856001600160a01b03166001600160a01b03168152602001908152602001600020600181548110610ada57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b031682600181518110610b1957634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201810191909152908516600090815260019091526040902080546002908110610b6557634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b031682600281518110610ba457634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201810191909152908516600090815260019091526040902080546003908110610bf057634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b031682600381518110610c2f57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050828260048151811061066757634e487b7160e01b600052603260045260246000fd5b60008060408385031215610c83578182fd5b82356001600160a01b0381168114610c99578283fd5b946020939093013593505050565b60006020808385031215610cb9578182fd5b825167ffffffffffffffff80821115610cd0578384fd5b818501915085601f830112610ce3578384fd5b815181811115610cf557610cf5610e83565b8060051b604051601f19603f83011681018181108582111715610d1a57610d1a610e83565b604052828152858101935084860182860187018a1015610d38578788fd5b8795505b83861015610d5a578051855260019590950194938601938601610d3c565b5098975050505050505050565b600060208284031215610d78578081fd5b81518015158114610d87578182fd5b9392505050565b6000815180845260208085019450808401835b83811015610dc65781516001600160a01b031687529582019590820190600101610da1565b509495945050505050565b60008251815b81811015610df15760208186018101518583015201610dd7565b81811115610dff5782828501525b509190910192915050565b828152604060208201526000610e236040830184610d8e565b949350505050565b848152608060208201526000610e446080830186610d8e565b6001600160a01b03949094166040830152506060015292915050565b600082821015610e7e57634e487b7160e01b81526011600452602481fd5b500390565b634e487b7160e01b600052604160045260246000fdfea264697066735822122021e3d43cf8524ce8139eed6f7d48a47a7289fae4fd231efaa955faea50c172e364736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1131,
        "contract": "contracts/test/Swapper.sol:Swapper",
        "label": "dexRouterAddress",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1136,
        "contract": "contracts/test/Swapper.sol:Swapper",
        "label": "eligibleSwapPaths",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 1138,
        "contract": "contracts/test/Swapper.sol:Swapper",
        "label": "swapToken",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      }
    }
  }
}