{
  "address": "0xa12A728656Fbc82dC25515b548b328E63B556572",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_tokenSymbols",
          "type": "string[]"
        },
        {
          "internalType": "address[]",
          "name": "_tokenAddresses",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_toToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "calculateNeededETHAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_toToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "tokenAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ubeswapRouterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc1782e82e2662c37b42ce5499b7b9eaae7c17a79d7502bc9d1f9682031c5c945",
  "receipt": {
    "to": null,
    "from": "0x99B551F0Bb2e634D726d62Bb2FF159a34964976C",
    "contractAddress": "0xa12A728656Fbc82dC25515b548b328E63B556572",
    "transactionIndex": 0,
    "gasUsed": "702356",
    "logsBloom": "0x
    "blockHash": "0xe2fdeb776158fd8b47c2b0142387495f4cb8881232f99f27e7d368ce638a1d49",
    "transactionHash": "0xc1782e82e2662c37b42ce5499b7b9eaae7c17a79d7502bc9d1f9682031c5c945",
    "logs": [],
    "blockNumber": 17185569,
    "cumulativeGasUsed": "702356",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "BCT",
      "NCT",
      "cUSD",
      "CELO"
    ],
    [
      "0x4c5f90C50Ca9F849bb75D93a393A4e1B6E68Accb",
      "0xfb60a08855389F3c0A66b29aB9eFa911ed5cbCB5",
      "0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1",
      "0xF194afDf50B03e69Bd7D057c1Aa9e10c9954E4C9"
    ]
  ],
  "numDeployments": 1,
  "solcInputHash": "a562f5e3b9dc37720e7246996ba3cba0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_tokenSymbols\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"_tokenAddresses\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"calculateNeededETHAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"tokenAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ubeswapRouterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/Swapper.sol\":\"Swapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\"},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\nimport './IUniswapV2Router01.sol';\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountETH);\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\"},\"contracts/test/Swapper.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\\\";\\n\\ncontract Swapper {\\n    using SafeERC20 for IERC20;\\n\\n    address public ubeswapRouterAddress =\\n        0xE3D8bd6Aed4F159bc8000a9cD47CffDb95F96121;\\n    mapping(string => address) public tokenAddresses;\\n\\n    constructor(\\n        string[] memory _tokenSymbols,\\n        address[] memory _tokenAddresses\\n    ) {\\n        uint256 i = 0;\\n        while (i < _tokenSymbols.length) {\\n            tokenAddresses[_tokenSymbols[i]] = _tokenAddresses[i];\\n            i += 1;\\n        }\\n    }\\n\\n    function calculateNeededETHAmount(\\n        address _toToken,\\n        uint256 _amount\\n    ) public view returns (uint256) {\\n        IUniswapV2Router02 routerSushi = IUniswapV2Router02(\\n            ubeswapRouterAddress\\n        );\\n\\n        address[] memory path = generatePath(tokenAddresses[\\\"cUSDC\\\"], _toToken);\\n\\n        uint256[] memory amounts = routerSushi.getAmountsIn(_amount, path);\\n        return amounts[0];\\n    }\\n\\n    function swap(address _toToken, uint256 _amount) public payable {\\n        IUniswapV2Router02 routerSushi = IUniswapV2Router02(\\n            ubeswapRouterAddress\\n        );\\n\\n        address[] memory path = generatePath(tokenAddresses[\\\"cUSDC\\\"], _toToken);\\n\\n        uint256[] memory amounts = routerSushi.swapETHForExactTokens{\\n            value: msg.value\\n        }(_amount, path, address(this), block.timestamp);\\n\\n        IERC20(_toToken).transfer(msg.sender, _amount);\\n\\n        if (msg.value > amounts[0]) {\\n            uint256 leftoverETH = msg.value - amounts[0];\\n            (bool success, ) = msg.sender.call{value: leftoverETH}(\\n                new bytes(0)\\n            );\\n\\n            require(success, \\\"Failed to send surplus ETH back to user.\\\");\\n        }\\n    }\\n\\n    function generatePath(\\n        address _fromToken,\\n        address _toToken\\n    ) internal view returns (address[] memory) {\\n        if (_toToken == tokenAddresses[\\\"cUSDC\\\"]) {\\n            address[] memory path = new address[](2);\\n            path[0] = _fromToken;\\n            path[1] = _toToken;\\n            return path;\\n        } else {\\n            address[] memory path = new address[](3);\\n            path[0] = _fromToken;\\n            path[1] = tokenAddresses[\\\"cUSDC\\\"];\\n            path[2] = _toToken;\\n            return path;\\n        }\\n    }\\n\\n    fallback() external payable {}\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0xaf01ef13580b4275ef02ae27184558872181fdcc6e266912419ae5fbb8e242df\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x6080604052600080546001600160a01b03191673e3d8bd6aed4f159bc8000a9cd47cffdb95f961211790553480156200003757600080fd5b5060405162000d3b38038062000d3b8339810160408190526200005a91620001a3565b60005b82518110156200010e578181815181106200008857634e487b7160e01b600052603260045260246000fd5b60200260200101516001848381518110620000b357634e487b7160e01b600052603260045260246000fd5b6020026020010151604051620000ca9190620002da565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b03199092169190911790556200010660018262000351565b90506200005d565b505050620003bf565b600082601f83011262000128578081fd5b81516020620001416200013b836200032b565b620002f8565b80838252828201915082860187848660051b890101111562000161578586fd5b855b85811015620001965781516001600160a01b038116811462000183578788fd5b8452928401929084019060010162000163565b5090979650505050505050565b6000806040808486031215620001b7578283fd5b83516001600160401b0380821115620001ce578485fd5b818601915086601f830112620001e2578485fd5b81516020620001f56200013b836200032b565b8083825282820191508286018b848660051b89010111156200021557898afd5b895b85811015620002a5578151878111156200022f578b8cfd5b8801603f81018e1362000240578b8cfd5b8581015188811115620002575762000257620003a9565b6200026b601f8201601f19168801620002f8565b8181528f8c8385010111156200027f578d8efd5b62000290828983018e860162000376565b86525050928401929084019060010162000217565b505091890151919750909450505080831115620002c0578384fd5b5050620002d08582860162000117565b9150509250929050565b60008251620002ee81846020870162000376565b9190910192915050565b604051601f8201601f191681016001600160401b0381118282101715620003235762000323620003a9565b604052919050565b60006001600160401b03821115620003475762000347620003a9565b5060051b60200190565b600082198211156200037157634e487b7160e01b81526011600452602481fd5b500190565b60005b838110156200039357818101518382015260200162000379565b83811115620003a3576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b61096c80620003cf6000396000f3fe6080604052600436106100405760003560e01c80631109ec9914610049578063935b13f61461007c578063a7bfc894146100d5578063d004f0f7146100f557005b3661004757005b005b34801561005557600080fd5b50610069610064366004610668565b610108565b6040519081526020015b60405180910390f35b34801561008857600080fd5b506100bd61009736600461076d565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b6040516001600160a01b039091168152602001610073565b3480156100e157600080fd5b506000546100bd906001600160a01b031681565b610047610103366004610668565b61020e565b6000805460405164635553444360d81b81526001600160a01b0390911690829061015190600190600501908152604051908190036020019020546001600160a01b0316866104a0565b90506000826001600160a01b0316631f00ca7486846040518363ffffffff1660e01b8152600401610183929190610876565b60006040518083038186803b15801561019b57600080fd5b505afa1580156101af573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101d7919081019061069e565b9050806000815181106101fa57634e487b7160e01b600052603260045260246000fd5b602002602001015193505050505b92915050565b6000805460405164635553444360d81b81526001600160a01b03909116919061025690600190600501908152604051908190036020019020546001600160a01b0316856104a0565b90506000826001600160a01b031663fb3bdb4134868530426040518663ffffffff1660e01b815260040161028d9493929190610897565b6000604051808303818588803b1580156102a657600080fd5b505af11580156102ba573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526102e3919081019061069e565b60405163a9059cbb60e01b8152336004820152602481018690529091506001600160a01b0386169063a9059cbb90604401602060405180830381600087803b15801561032e57600080fd5b505af1158015610342573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103669190610746565b508060008151811061038857634e487b7160e01b600052603260045260246000fd5b6020026020010151341115610499576000816000815181106103ba57634e487b7160e01b600052603260045260246000fd5b6020026020010151346103cd91906108fd565b6040805160008082526020820192839052929350339184916103ee9161083d565b60006040518083038185875af1925050503d806000811461042b576040519150601f19603f3d011682016040523d82523d6000602084013e610430565b606091505b50509050806104965760405162461bcd60e51b815260206004820152602860248201527f4661696c656420746f2073656e6420737572706c757320455448206261636b206044820152673a37903ab9b2b91760c11b606482015260840160405180910390fd5b50505b5050505050565b606060016040516104bc9064635553444360d81b815260050190565b908152604051908190036020019020546001600160a01b038381169116141561058357604080516002808252606082018352600092602083019080368337019050509050838160008151811061052257634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050828160018151811061056457634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909216602092830291909101909101529050610208565b604080516003808252608082019092526000916020820160608036833701905050905083816000815181106105c857634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920101526040805164635553444360d81b81526001600582018190529151908190036025019020548351921691839190811061062657634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050828160028151811061056457634e487b7160e01b600052603260045260246000fd5b6000806040838503121561067a578182fd5b82356001600160a01b0381168114610690578283fd5b946020939093013593505050565b600060208083850312156106b0578182fd5b825167ffffffffffffffff808211156106c7578384fd5b818501915085601f8301126106da578384fd5b8151818111156106ec576106ec610920565b8060051b91506106fd8483016108cc565b8181528481019084860184860187018a1015610717578788fd5b8795505b8386101561073957805183526001959095019491860191860161071b565b5098975050505050505050565b600060208284031215610757578081fd5b81518015158114610766578182fd5b9392505050565b6000602080838503121561077f578182fd5b823567ffffffffffffffff80821115610796578384fd5b818501915085601f8301126107a9578384fd5b8135818111156107bb576107bb610920565b6107cd601f8201601f191685016108cc565b915080825286848285010111156107e2578485fd5b80848401858401378101909201929092529392505050565b6000815180845260208085019450808401835b838110156108325781516001600160a01b03168752958201959082019060010161080d565b509495945050505050565b60008251815b8181101561085d5760208186018101518583015201610843565b8181111561086b5782828501525b509190910192915050565b82815260406020820152600061088f60408301846107fa565b949350505050565b8481526080602082015260006108b060808301866107fa565b6001600160a01b03949094166040830152506060015292915050565b604051601f8201601f1916810167ffffffffffffffff811182821017156108f5576108f5610920565b604052919050565b60008282101561091b57634e487b7160e01b81526011600452602481fd5b500390565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220a411e20f0eb7622bb962f5b696a429fc1a1bb6049ccda738b3fd0d5da6bbfbaa64736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106100405760003560e01c80631109ec9914610049578063935b13f61461007c578063a7bfc894146100d5578063d004f0f7146100f557005b3661004757005b005b34801561005557600080fd5b50610069610064366004610668565b610108565b6040519081526020015b60405180910390f35b34801561008857600080fd5b506100bd61009736600461076d565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b6040516001600160a01b039091168152602001610073565b3480156100e157600080fd5b506000546100bd906001600160a01b031681565b610047610103366004610668565b61020e565b6000805460405164635553444360d81b81526001600160a01b0390911690829061015190600190600501908152604051908190036020019020546001600160a01b0316866104a0565b90506000826001600160a01b0316631f00ca7486846040518363ffffffff1660e01b8152600401610183929190610876565b60006040518083038186803b15801561019b57600080fd5b505afa1580156101af573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101d7919081019061069e565b9050806000815181106101fa57634e487b7160e01b600052603260045260246000fd5b602002602001015193505050505b92915050565b6000805460405164635553444360d81b81526001600160a01b03909116919061025690600190600501908152604051908190036020019020546001600160a01b0316856104a0565b90506000826001600160a01b031663fb3bdb4134868530426040518663ffffffff1660e01b815260040161028d9493929190610897565b6000604051808303818588803b1580156102a657600080fd5b505af11580156102ba573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526102e3919081019061069e565b60405163a9059cbb60e01b8152336004820152602481018690529091506001600160a01b0386169063a9059cbb90604401602060405180830381600087803b15801561032e57600080fd5b505af1158015610342573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103669190610746565b508060008151811061038857634e487b7160e01b600052603260045260246000fd5b6020026020010151341115610499576000816000815181106103ba57634e487b7160e01b600052603260045260246000fd5b6020026020010151346103cd91906108fd565b6040805160008082526020820192839052929350339184916103ee9161083d565b60006040518083038185875af1925050503d806000811461042b576040519150601f19603f3d011682016040523d82523d6000602084013e610430565b606091505b50509050806104965760405162461bcd60e51b815260206004820152602860248201527f4661696c656420746f2073656e6420737572706c757320455448206261636b206044820152673a37903ab9b2b91760c11b606482015260840160405180910390fd5b50505b5050505050565b606060016040516104bc9064635553444360d81b815260050190565b908152604051908190036020019020546001600160a01b038381169116141561058357604080516002808252606082018352600092602083019080368337019050509050838160008151811061052257634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050828160018151811061056457634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909216602092830291909101909101529050610208565b604080516003808252608082019092526000916020820160608036833701905050905083816000815181106105c857634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920101526040805164635553444360d81b81526001600582018190529151908190036025019020548351921691839190811061062657634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050828160028151811061056457634e487b7160e01b600052603260045260246000fd5b6000806040838503121561067a578182fd5b82356001600160a01b0381168114610690578283fd5b946020939093013593505050565b600060208083850312156106b0578182fd5b825167ffffffffffffffff808211156106c7578384fd5b818501915085601f8301126106da578384fd5b8151818111156106ec576106ec610920565b8060051b91506106fd8483016108cc565b8181528481019084860184860187018a1015610717578788fd5b8795505b8386101561073957805183526001959095019491860191860161071b565b5098975050505050505050565b600060208284031215610757578081fd5b81518015158114610766578182fd5b9392505050565b6000602080838503121561077f578182fd5b823567ffffffffffffffff80821115610796578384fd5b818501915085601f8301126107a9578384fd5b8135818111156107bb576107bb610920565b6107cd601f8201601f191685016108cc565b915080825286848285010111156107e2578485fd5b80848401858401378101909201929092529392505050565b6000815180845260208085019450808401835b838110156108325781516001600160a01b03168752958201959082019060010161080d565b509495945050505050565b60008251815b8181101561085d5760208186018101518583015201610843565b8181111561086b5782828501525b509190910192915050565b82815260406020820152600061088f60408301846107fa565b949350505050565b8481526080602082015260006108b060808301866107fa565b6001600160a01b03949094166040830152506060015292915050565b604051601f8201601f1916810167ffffffffffffffff811182821017156108f5576108f5610920565b604052919050565b60008282101561091b57634e487b7160e01b81526011600452602481fd5b500390565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220a411e20f0eb7622bb962f5b696a429fc1a1bb6049ccda738b3fd0d5da6bbfbaa64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5244,
        "contract": "contracts/test/Swapper.sol:Swapper",
        "label": "ubeswapRouterAddress",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5248,
        "contract": "contracts/test/Swapper.sol:Swapper",
        "label": "tokenAddresses",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_string_memory_ptr,t_address)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}